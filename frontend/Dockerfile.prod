# pull official base image
FROM node:18-alpine AS build

# set working directory
WORKDIR /app

ARG APP_VERSION_TAG
ARG APP_COMMIT
ARG APP_BRANCH

ENV VITE_APP_VERSION_TAG=$APP_VERSION_TAG
ENV VITE_APP_COMMIT=$APP_COMMIT
ENV VITE_APP_BRANCH=$APP_BRANCH
ENV VITE_APP_BUILD_FILE="prod"
# add `/app/node_modules/.bin` to $PATH
ENV PATH=/app/node_modules/.bin:$PATH

# install app dependencies
COPY package.json ./

RUN npm install --verbose

# add app, PRODUCTION USES .env file!!
COPY . ./

# Always build the app for production during the image build process
RUN npm run build


# Production stage
FROM nginx:stable-alpine

# Environment variables for dynamic configuration
ENV STATIC_ROOT=/app/staticfiles \
    MEDIA_ROOT=/app/mediafiles

# Vite in production runs on port 443
ENV VITE_PORT=443

# Copy frontend artifacts to Nginx static directory
COPY --from=build /app/dist /usr/share/nginx/html

# Copy Nginx configuration and entry script
COPY nginx-prod/nginx.conf.template.ssl /etc/nginx/nginx.conf.template.ssl
COPY nginx-prod/nginx.conf.template.no-ssl /etc/nginx/nginx.conf.template.no-ssl
COPY nginx-prod/docker-entrypoint.sh /docker-entrypoint.sh

# Add version information
RUN echo "{\"tag\": \"$VITE_APP_VERSION_TAG\", \"commit\": \"$VITE_APP_COMMIT\", \"branch\": \"$VITE_APP_BRANCH\", \"build_file\": \"$VITE_APP_BUILD_FILE\"}" > /usr/share/nginx/html/version.json

# Give permissions to the entry script
RUN chmod +x /docker-entrypoint.sh

# Expose necessary ports
EXPOSE 80 443

# Use the entry script as the entry point
ENTRYPOINT ["/docker-entrypoint.sh"]
