services:
  ngen-frontend:
    image: certunlp/ngen-frontend:2.3.12
    restart: always
    volumes:
      - ./data_static:/app/staticfiles
      - ./data_media:/app/mediafiles
      - ./ssl-prod:/etc/nginx/ssl/
    ports:
      - "443:443"
      - "80:80"

  ngen-django:
    image: certunlp/ngen-django:2.3.12
    restart: always
    entrypoint: ./docker/entrypoint.sh
    command: gunicorn project.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./data_static/:/code/staticfiles
      - ./data_media/:/code/mediafiles
    env_file:
      - .env/ngen.base.db.env
      - .env/ngen.base.env
      - .env/ngen.prod.env
    depends_on:
      - ngen-postgres
      - ngen-redis

  ngen-celery-worker:
    image: certunlp/ngen-django:2.3.12
    restart: always
    command: celery -A project worker -l warning
    env_file:
      - .env/ngen.base.db.env
      - .env/ngen.base.env
      - .env/ngen.prod.env
    depends_on:
      - ngen-postgres
      - ngen-redis

  ngen-celery-beat:
    image: certunlp/ngen-django:2.3.12
    restart: always
    command: celery -A project beat -l warning
    env_file:
      - .env/ngen.base.db.env
      - .env/ngen.base.env
      - .env/ngen.prod.env
    depends_on:
      - ngen-postgres
      - ngen-redis

  ngen-postgres:
    image: postgres:16
    restart: always
    env_file:
      - .env/ngen.base.db.env
    volumes:
      - ./data_postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  ngen-redis:
    image: "redis:alpine"
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./data_redis:/data
