services:
  ngen-nginx:
    image: nginx:alpine
    restart: "always"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./ngen_static:/app/staticfiles
      - ./ngen_media:/app/mediafiles
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - ngen-django
      - ngen-frontend

  ngen-frontend:
    image: certunlp/ngen-frontend:latest
    restart: always
    env_file:
      - ngen.env
      - ngen.prod.env

  ngen-django:
    image: certunlp/ngen-django:latest
    restart: always
    entrypoint: ./docker/entrypoint.sh
    command: gunicorn project.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./ngen_static/:/code/staticfiles
      - ./ngen_media/:/code/mediafiles
    env_file:
      - ngen.env
      - ngen.prod.env
    depends_on:
      - ngen-postgres
      - ngen-redis

  ngen-celery-worker:
    image: certunlp/ngen-django:latest
    restart: always
    command: celery -A project worker -l warning
    env_file:
      - ngen.env
    depends_on:
      - ngen-django
      - ngen-redis

  ngen-celery-beat:
    image: certunlp/ngen-django:latest
    restart: always
    command: celery -A project beat -l warning
    env_file:
      - ngen.env
    depends_on:
      - ngen-django
      - ngen-redis

  ngen-redis:
    image: "redis:alpine"
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/data

  ngen-postgres:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=example
      - POSTGRES_DB=ngen
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
